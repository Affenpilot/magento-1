<?php
/**
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the GNU General Public License (GPL 3)
 * that is bundled with this package in the file LICENSE.txt
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Payone_Core to newer
 * versions in the future. If you wish to customize Payone_Core for your
 * needs please refer to http://www.payone.de for more information.
 *
 * @category        Payone
 * @package         design_frontend_base_default
 * @subpackage      template
 * @copyright       Copyright (c) 2017 <kontakt@fatchip.de> - www.fatchip.de
 * @author          FATCHIP GmbH <kontakt@fatchip.de>
 * @license         <http://www.gnu.org/licenses/> GNU General Public License (GPL 3)
 * @link            http://www.fatchip.de
 */
?>
<?php
/**
 * @var $this Payone_Core_Block_Amazon_Pay_Checkout
 */
$config = $this->getConfiguration();
?>
<div id="addressBookWidgetDiv"></div>

<div id="walletWidgetDiv"></div>

<!-- In an appropriate script section -->
<script>
    window.onAmazonLoginReady = function() {amazon.Login.setClientId('<?php echo $config->getAmzClientId(); ?>'); };
    window.onAmazonPaymentsReady = function() {
        new OffAmazonPayments.Widgets.AddressBook({
            sellerId: '<?php echo $config->getAmzSellerId(); ?>',
            scope: 'profile payments:widget payments:shipping_address payments:billing_address',
            onOrderReferenceCreate: function(orderReference) {
                // Here is where you can grab the Order Reference ID.
                orderReference.getAmazonOrderReferenceId();
            },
            onAddressSelect: function(orderReference) {
                // Replace the following code with the action that you want
                // to perform after the address is selected. The
                // amazonOrderReferenceId can be used to retrieve the address
                // details by calling the GetOrderReferenceDetails operation.

                // If rendering the AddressBook and Wallet widgets
                // on the same page, you do not have to provide any additional
                // logic to load the Wallet widget after the AddressBook widget.
                // The Wallet widget will re-render itself on all subsequent
                // onAddressSelect events, without any action from you.
                // It is not recommended that you explicitly refresh it.
            },
            design: {
                designMode: 'responsive'
            },
            onReady: function(orderReference) {
                // Enter code here you want to be executed
                // when the address widget has been rendered.
            },
            onError: function(error) {
                // Your error handling code.
                // During development you can use the following
                // code to view error messages:
                console.log(error.getErrorCode() + ': ' + error.getErrorMessage());
                // See "Handling Errors" for more information.
            }
        }).bind("addressBookWidgetDiv");

        new OffAmazonPayments.Widgets.Wallet({
            sellerId: '<?php echo $config->getAmzSellerId(); ?>',
            scope: 'profile payments:widget payments:shipping_address payments:billing_address',
            onPaymentSelect: function(orderReference) {
                // Replace this code with the action that you want to perform
                // after the payment method is selected.

                // Ideally this would enable the next action for the buyer
                // including either a "Continue" or "Place Order" button.
            },
            design: {
                designMode: 'responsive'
            },
            onError: function(error) {
                // Your error handling code.
                // During development you can use the following
                // code to view error messages:
                console.log(error.getErrorCode() + ': ' + error.getErrorMessage());
                // See "Handling Errors" for more information.
            }
        }).bind("walletWidgetDiv");
    };
</script>

<!-- Load script Widgets.js from Amazon -->
<!-- URL changes to https://static-eu.payments-amazon.com/OffAmazonPayments/eur/lpa/js/Widgets.js when mode=live -->
<script async="async" src='https://static-eu.payments-amazon.com/OffAmazonPayments/eur/sandbox/lpa/js/Widgets.js'
></script>
